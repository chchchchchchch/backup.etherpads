% ------------------------------------------------------------------- %
% .MDSH IS MARKDOWN +X -> http://freeze.sh/2015/mdsh
%
% lines starting with % are comments and therefore will be ignored
% BUT: A COMMENT MAY BE FUNCTIONAL (= interpreted during export)
% A text [^]{a footnote} and some more text
% A citation reference [@fsf:2007:gpl]
% A citation reference with pagenumber [@[1-8]kay:1990:uiapv]
% -> bibtex references: http://freeze.sh/etherpad/bibref
% -> markdown reference: http://daringfireball.net/projects/markdown
% ------------------------------------------------------------------- %



% TITLE: _Gambiarra_ and  The Prototyping Perspective
% BY: Gabriel Menotti
% gabriel.menotti -> gmail.com

% FROM: http://wiki.medialab-prado.es/index.php/Gambiarra:_the_prototyping_perspective
% LICENSE: GFDL (1.2)
% INFO: http://lfkn.de/mge2


This essay is about two states of technical objects: the prototype and
the gambiarra. While the first is a popular concept, whose meaning and 
applications are fairly well known, the second is very particular to the 
Brazilian context, but could be reasonably associated with practices such 
as _bricolage_ and _making do_. I'd argue that these conditions constitute 
opposite epistemological/historical perspectives over technological 
development. This hypothesis draws heavily from the ideas of Walter 
Benjamin, Gilbert Simondon, Vilém Flusser and Jacques Derrida, whose works 
are referenced in the bottom of the text.

% SMALLSKIP:

The prototype is an object critical of its own function. It is not 
finished; it may not work. What characterizes a prototype is, first and 
foremost, the self-reflexivity of its operation: to use it is to put it to 
test and to engage in its evaluation. The most important effect of a 
prototype is, thus, the seemingly collateral reasoning about its failure, 
which is feedback into the process of prototyping. Each prototype is just
a dismissible iteration in this chain, a step to be overcome in order to 
produce the parameters of design of an even more ulterior product. 
Therefore, the prototype cannot be isolated from this engineering process 
-- it always exists in-between versions, having no identity apart from
this serial progression. The sincere objective of every prototype is
nothing else than to self-differ, in the same way that the prototyping
process aims to produce the fundamental _différance_ of a standard,
driving the fabrication of a million commoditized artifacts.

This specific sense is borrowed from the domain of industrial design.
The parameters of mass manufacture set by the industrial revolution demand 
heavy machinery and precise techniques, resulting in a rigid topology of
production. In opposition to traditional craftsmanship, the industrial
process cannot be easily adapted or corrected; it must be implemented as
a fully optimized architecture at once. Hence, within industrial paradigm,
projecting and producing (_and their respective pedagogies_) become strictly
separated activities, which no longer feedback immediately into each other
-- _only through the process of prototyping_. Being the production of the
project, prototyping is the regulating gap between these two firmly
localized territories. It structures not only the final object, but also
its negative: its mode of fabrication.

Therefore, the laboratorial isolation of prototyping looses its raison 
d'être once the topologies of manufacture become more fluid. When this 
happens, not only the practices of design and production come closer to 
each other, but they also become mingled into the everyday use of objects. 
One of the fields in which this change can be more clearly perceived is 
software engineering, whose increasing complexity demands the testing of 
prototypes by a large number of users. To cope with this scale, the agile 
programming methodology[^]{http://agilemanifesto.org} proposes to make 
software development more dynamic by dissolving hierarchies and creating an 
intense feedback cycle between the anxieties of the users and the labour of 
the programmers. Likewise, the release early, release often free software 
motto commands beta versions to be public released as soon as possible, so 
that they can be debugged in the wild. Systems such as the 
Flickr[^]{http://www.flickr.com} online photo directory and the 
Processing[^]{http://processing.org} programming framework spend years as 
unfinished products, and nevertheless acquired enormous popularity -- a 
level of community participation that could be justified precisely by the 
openness of their underdeveloped, insufficient identities.

With the emergence of open, modular hardware, this paradigm is being also 
implemented in physical object design. A new DIY culture is being promoted 
around the Arduino[^]{http://www.arduino.cc} microcontroller and the 
practice of fabbing, which employs low-cost, portable manufacturing 
structures once used for fast-prototyping, such as 3D printers. In this new 
scenario, a prototype can be praised as the sufficient object, whose 
integrity is produced at the precise moment it is put into operation. Its 
whole engineering process is concluded by the user -– sometimes, by its 
very use. This allows us not only to see the final object and its 
production as supplementary to the prototype and the prototyping chain, but 
also to engage with this fact in a positive way.

The usual specification of prototypes comes from the positivity of industry 
and science. Just like the novel, the excellent cultural form of the 
Industrial Age, prototyping implies in a conclusion that produces an 
integer, complete entity. This qualification arises from the 
progressiveness of history, either as a projection or a revision. Any 
history of technique provokes the accommodation of scattered objects into
a dramatic narrative, reasoning past technologies as the forerunners of new 
ones. For instance, it is modern cinema theory that qualifies the magic 
lantern and other optical devices as "pre-cinematographic". In their 
own times, these devices were the most advanced ones in terms of optical 
mechanisms.

Likewise, in the macrocycle of technical evolution, the most integer 
objects of our times are just prototypes for the ones to come. However,
it is not enough to just look at technology as a bridge to overtechnology, 
since this does not put into question the idea of progressiveness, and 
still maintain a sort of metaphysical closure around the prototype -– the 
illusion that there is any other condition but the sufficient one: the 
constant effort to drive around the inevitable fallibility of technology.
Technological development does not sum up to the history of anything;
it is just the ongoing duration of such effort.

Prototyping always points towards the closure of the technical entity. In 
order to allow a more dynamic epistemology of technological development, we 
should couple it with a practice with the contrary effect. Of course, the 
most obvious pair would be hacking and other forms of reverse-engineering, 
directed towards opening up the technical black boxes. However, in their 
systematicity, such methods of investigation do nothing more than analyze 
the constitution of an object's identity. Thus, they end up reinforcing 
the object's integrity and the correspondence between the assembly 
present at hand and an absent process of assemblage.

In an attempt to make the assemblage also manifest, we propose to look for 
a counterpoint of the prototype in the Brazilian _gambiarra_. Gambiarra is
an improvised amendment to a dysfunctional artefact, normally by the means
of its combination with another object. One of the most exemplary gambiarras 
is the use of wire wool in TV antennas to compensate deficient signal 
reception. Just like prototypes are created based on expectations and the 
projection of integrity, gambiarras are born from deception and failure.
To recover function, the superficial individuality of the artefact must be 
sacrificed. Simultaneously, another object reveals potentials that were not 
expected.

Their combination results in a technical ensemble whose 
individuation is performed by the user. Impossible to dissociate from the 
practice that produced it, the resulting entity is also called a gambiarra. 
Hence, if the prototype narrows the technical object down into 
concreteness, the gambiarra abstracts it further, at the same time 
revealing potentials and limitations of its discrete parts. One points 
towards the industrial standard -- the other, post-industrial, strays away 
from it.



% REFERENCES:
% ----------
% CITESRC: [@[p.143-166]benjamin:2002:storyteller]
% CITESRC: [@boufleur:2006:aqdg]
% CITESRC: [@derrida:1997:grammatology]
% CITESRC: [@[p.43-50]flusser:1999:factory]
% CITESRC: [@simondon:1958:modes]



