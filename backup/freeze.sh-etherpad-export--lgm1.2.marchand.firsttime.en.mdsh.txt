% .MDSH IS MARKDOWN +X -> http://freeze.sh/2015/mdsh
%
% A COMMENT MAY BE FUNCTIONAL (= ignored/interpreted during export)
% A text [^]{a footnote} and some more text
% A citation reference [@krausse:2001:fuller]
% A citation reference with pagenumber [@[1-8]krausse:2001:fuller]
% -> bibtex references: http://freeze.sh/etherpad/bibref
% -> markdown reference: http://daringfireball.net/projects/markdown

% FROM: http://git.io/vnYvj
% YEAR: 2011
% LICENSE: CC-BY-SA


% TITLE: Setting a book with Scribus
% BY: Pierre Marchand
% RUBRIK: First time

I remember my own first time, the first serious one, was a 
bookletization of a famous, amongst afficionados, little parody by 
Pierre Louys under the title of _Manuel de civilité pour les 
petites filles à l'usage des maisons d'éducation//. With its 
typical late 19th century French style, it was natural to associate 
it to a didone font. I ended up using the Didot shipped with the Mac 
OS I owned at this time. 

Here is the crux of this story: at this point I hadn't yet read the 
paper by René Ponot [^]{Le Didot a-t-il besoin de ligatures?
Cahiers Gutenberg no. 22 (1995), p. 17-41,
http://cahiers.gutenberg.eu.org/cg-bin/article/CG_1995___22_17_0.pdf}
convincingly establishing that it was not a good idea to use
ligatures with the Didot typeface. I wanted to use them!
But in this instance of the typeface, the ligatures and old 
numerals were outside the charmap, intended to be accessed only
by means of OpenType substitution or glyph index. That, in itself,
was an adventure.

This time, though, was also my first time going deeply into font 
technologies and Scribus code. Along my journey in these fields I 
came to read Theotiste Lefevre. His amazing _Guide pratique du 
compositeur d'imprimerie_ helped me realize how much, even if still 
non-trivial, the making of a book has become within everyone's reach 
with desktop publishing and personal printers. For now, forget Louys 
and Didot and go for a book in a minute!

The recipe is as follows. First be modest and grab some text fallen 
into the public domain at gutenberg.org. If you attempt to write your 
own material, you will definitely not be able to do a book in a 
minute. Next, run a bit of Perl magic powder onto it like
`perl -n -e 's/(\S)\r\n/\1 /ms; print $_;'  original.txt > withoutlinebreak.txt` 
to let Scribus do its work at line breaking.
% (See the sidebar for more detailed instructions.)

Now you can create a new double-sided Scribus document with a bunch 
of pages and automatic text frames turned on. Import the text into 
the first text frame. Set the default paragraph style to something 
that looks like a book, serif typeface at 10 points, justified, etc. 
Et voilá!

Well, it isn't exactly ready to serve to your friends, but you get 
enough of the taste of an actual book to open the door and start to 
work. If you think not, click on the eye at the right bottom of the 
Scribus window to turn on Preview mode.

While writing these few lines, I'm doing the same as I did years ago 
and am still amazed by what Scribus brought to us -- by what it 
allows us to do and the opportunity it gives to learn about desktop 
publishing. We have the opportunity to do publishing work as Scribus 
exposes its internal representation of graphic objects through an 
opened source code and file format.



% S1: Executing commands in the command line
% S1: --------------------------------------
% S1: 
% S1: No matter what operating system you're using, you've got a 
% S1: command-line interface at your disposal. If you're of a certain age, 
% S1: you may remember fiddling around a little with MS-DOS. Even if you 
% S1: never did, don't worry about it. The command line is friendlier than 
% S1: you may think.
% S1: 
% S1: Now, because we're all designers here, chances are good you're using 
% S1: a Mac. Or, if you're like us, Linux. The tips and commands listed 
% S1: below work just fine for both. If you try them in MS-DOS (under 
% S1: Windows), your computer may explode. We're not quite sure, really.
% S1: 
% S1: Open a terminal: 
% S1: On a Mac: Crack open your Applications folder and go to Utilities. 
% S1: There's a program there called Terminal. Open it. 
% S1: On Linux: Normally under your Accessories or System menu, you'll find 
% S1: something called Terminal. Open it.
% S1: 
% S1: Get to the right place:
% S1: If you've downloaded a book from Project Gutenberg, hopefully as a 
% S1: plain text file (something ending with .txt), great. If not, go back 
% S1: and do that. But make sure to take note of where you've saved it. 
% S1: 
% S1: When you opened Terminal, it should have started you up in your home 
% S1: directory. To make it easier to find where you're going, open up your 
% S1: file browser (Finder on a Mac, or on most kind of Linux, just double 
% S1: click on the icon for your home directory). Navigate to where you put 
% S1: your file. Now, take a look at the path leading up to that. For 
% S1: example, if you left it in your Downloads directory, chances are good 
% S1: that it'll only be one directory past home. 
% S1: 
% S1: Once you have an idea of where you've put your file, go back to the 
% S1: Terminal. To change directories (because that's what you're about to 
% S1: do, unless you've left the file in your home directory), you're going 
% S1: to use the cd command. It allows you to (yes!) change directories. 
% S1: Let's say you've left your file in the Downloads directory. In your 
% S1: terminal, you'd type "cd Downloads" (without the quotation marks). 
% S1: That would take you to your Downloads directory. If, in the Downloads 
% S1: directory, you happened to have another directory, this one called 
% S1: books, for example, you'd then go "cd books" (note that it's case 
% S1: sensitive). 
% S1: 
% S1: Looking around:
% S1: Now, we're in our fictional home/Downloads/books directory. Let's 
% S1: take a look at what's there. To get a list of the contents of a 
% S1: directory, just type "ls" while you're in the directory you want to 
% S1: look at. It'll turn up a list of all the files and directories 
% S1: contained within that directory. If you've gotten to the right place, 
% S1: ls should show you the book you've downloaded. 
% S1: 
% S1: Running the script:
% S1: Now you can run the script mentioned in the article. Just copy it and 
% S1: paste it into your terminal. Or, if you're reading this in print, 
% S1: type it. Heck, type it in regardless, just for practice!
% S1: 
% S1: perl -n -e 's/(\S)\r\n/\1 /ms; print $_;'  original.txt > 
% S1: withoutlinebreak.txt
% S1: 
% S1: Of course, you'll want to change "original.txt" to reflect the actual 
% S1: file name of the book you downloaded. Then, hit Enter. If all goes 
% S1: well, the next time you do an ls, you'll find a new file, called 
% S1: "withoutlinebreak.txt" which will be the book you downloaded, without 
% S1: linebreaks and ready to be conveniently typeset in Scribus.
% S1: 
% S1: While this may seem like a lot of complicated steps, once you get 
% S1: used to it, you'll find that it's easy, convenient and fast. And it's 
% S1: just the beginning of what you can do with the command line. 
% S1: 
% S1: -the editors
% MKSIDEBAR: S1




